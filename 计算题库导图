1.创建练习题存储数据库。目前先用临时库temp。
表：muldiv，用于存储生成的乘除法题目，所有题目尽可能以整数的形式存在，当需要小数的题目
时，只需要将相应的运算因子除以十的n次方即可。
    列id：
    列shortFactor：乘法算式中，数字位数较小的那个因数。或者除法算式中的除数。
                    小学阶段，这个数字是两位数和一位数。
    列longFactor：乘法算式中，数字位数较大的那个因数。或者除法算式中的商。
                    小学阶段，除循环小数外，筛选掉位数大于四位的商。
    列productDividend：乘法算式中的积，或者除法算式中的商。
    列type：值0，表示本条为商是循环小数的算式，值1，表示本条用作乘法算式
            值2表示本条用作除法算式，值3，表示本条可用作乘法或者除法算式
表：muldivattr，用于存储每条算式的属性或者特征值，表中的第一列是muldiv表中每条算式
    的id，表中的其他每一列都对应算式的一个或者多个特征。
    列id：对应muldiv表中每条算式的id
    列mental：心算或者口算属性(mental【译】精神的，内心的)
    列written：笔算属性
    列grade0：暂定为学段属性，例如用数字1到12表示6个年级的上半和下半学年，那么五年级
                上半学年对应的数字就是9。比如小数乘法出现在五年级上册，那么小数乘法
                的grade0属性就应该是9
    列bk0：备用
<习题选择器>：最终目标是在程序中实现按章节选择合适题目。
            例如五年级上第一章是《小数乘法》，例1是小数乘整数，并且积的末尾没有0，
            习题(算式)选择器应当选择同类的小数乘整数并且积的末尾没有0的的题目。例2
            同样是小数乘整数，但是积的末尾由因数的相乘而产生0，习题选择器就应当选择
            小数乘整数并且因数相乘末尾产生0的算式。例3是两个因数都带小数点的小数乘法，
            但是因数的总位数小于等于按整数算时积的总位数，就是点小数点时候乘积的位数
            不会出现不足。例4是乘积的小数位数不够，需要在乘积的前面不足0再点小数点的
            题目。
<列-习题分类特征>：根据上面程序，如果某个题目经过程序选为第一章例4对应的习题，可以用某个
            按某个规则给定的数字来标志习题的分类特征，必须设计成一个习题可以有多个特征的
            形式。